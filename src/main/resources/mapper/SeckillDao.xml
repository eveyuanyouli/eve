<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.seckill.dao.SeckillDao">
    <resultMap id="BaseResultMap" type="org.seckill.entity.Seckill">
        <id column="seckill_id" property="seckillId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="number" property="number" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        seckill_id, name, number, start_time, end_time, create_time, status
    </sql>

    <!-- 目的：为 AO 接口方法提供 SQL 语句配置、减库存操作 -->
    <update id="reduceNumber">
        <!-- 具体的 SQL 语句 -->
        update
        seckill
        set
        number = number - 1
        where seckill_id = #{seckillId}
        <!-- &lt; 代表 < 的意思，XML中 < 是关键字，所以需要用转义字符来代替 -->
        and start_time &lt;= #{killTime}
        and end_time >= #{killTime}
        and number > 0;
    </update>

    <!-- 根据 ID 查询秒杀对象 -->
    <select id="queryById" resultType="Seckill" parameterType="long">
        select seckill_id, name, number, start_time, end_time, create_time, status
        from seckill
        where seckill_id = #{seckillId}
    </select>

    <!-- 根据偏移量查询秒杀商品列表 -->
    <select id="queryAll" resultType="Seckill">
        select seckill_id, name, number, start_time, end_time, create_time, status
        from seckill
        WHERE status = #{status, jdbcType = INTEGER}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <!-- 更新商品列表 -->
    <update id="updateOrders">
        UPDATE seckill
        <set>
            <if test="name != null">
                name = #{name, jdbcType = VARCHAR},
            </if>
            <if test="number != null">
                number = #{number, jdbcType = INTEGER},
            </if>
            <if test="startTime != null">
                start_time = #{startTime, jdbcType = TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime, jdbcType = TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType = TIMESTAMP}
            </if>
        </set>
        WHERE seckill_id = #{seckillId, jdbcType = INTEGER}
    </update>

    <!-- 删除对应列表信息 -->
    <delete id="deleteOrders" parameterType="java.lang.Integer">
        DELETE FROM seckill
        WHERE seckill_id = #{seckillId, jdbcType = INTEGER}
    </delete>

    <!-- 逻辑删除对应列表信息 -->
    <update id="logicallyDeleted">
        UPDATE seckill
        SET status = #{status, jdbcType = INTEGER}
        WHERE seckill_id = #{seckillId, jdbcType = INTEGER}
    </update>

    <!-- 添加信息 -->
    <insert id="addorders" parameterType="org.seckill.entity.Seckill">
        INSERT INTO seckill (
        seckill_id, name, number, start_time, end_time, create_time
        ) VALUE (
        #{seckillId, jdbcType = INTEGER},
        #{name, jdbcType = VARCHAR},
        #{number, jdbcType = INTEGER},
        #{startTime, jdbcType = TIMESTAMP},
        #{endTime, jdbcType = TIMESTAMP},
        #{createTime, jdbcType = TIMESTAMP}
        )
    </insert>

    <!-- 通过 MyBatis 调用存储过程 -->
    <select id="killByProcedure" statementType="CALLABLE">
        call execute_seckill (
          #{seckillId, jdbcType = BIGINT, mode = IN},
          #{phone, jdbcType = BIGINT, mode = IN},
          #{killTime, jdbcType = TIMESTAMP, mode = IN},
          #{result, jdbcType = BIGINT, mode = OUT}
        )
    </select>

</mapper>